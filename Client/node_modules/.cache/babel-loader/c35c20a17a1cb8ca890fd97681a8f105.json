{"ast":null,"code":"var _jsxFileName = \"/Users/hieunguyen/Desktop/Social Media/Client/src/Component/Comment.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardHeader, CardContent, Typography, Avatar, Divider, Button, Collapse } from \"@material-ui/core\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}));\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    postComments,\n    currentUser,\n    postId\n  } = _ref;\n  const [comments, setComments] = useState(postComments);\n  const [content, setContent] = useState(\"\");\n  const classes = useStyles();\n\n  function handelContents(e) {\n    setContent(e.target.value);\n  }\n\n  function handelSubmit(e) {\n    e.preventDefault();\n\n    if (content) {\n      const body = {\n        content\n      };\n      Api.post(`/posts/${postId}/comments`, body, {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\")\n        }\n      }).then(res => {\n        if (!comments) {\n          setComments(comments);\n        } else {\n          setComments(prevComment => [res.data.comment, ...prevComment]);\n        }\n      }).catch(error => {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n        } else if (error.request) {\n          console.log(console.log(error));\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: cyan[200],\n        Height: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"circular\",\n          style: {\n            backgroundColor: `${currentUser === null || currentUser === void 0 ? void 0 : currentUser.color}`\n          },\n          className: classes.large,\n          children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.username.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handelSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-textarea\",\n            label: \"\",\n            placeholder: \"Enter your text here\",\n            multiline: true,\n            fullWidth: true,\n            variant: \"filled\",\n            onChange: e => handelContents(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(Collapse, {\n        timeout: 500,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundColor: cyan[200],\n            Height: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"circular\",\n              style: {\n                backgroundColor: `${comment.author[0]}`\n              },\n              className: classes.large,\n              children: comment === null || comment === void 0 ? void 0 : comment.author[0].username.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"p\",\n              color: \"textSecondary\",\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comment, \"iwbmhQ4pdhjbphfaHSXYL+KPaFg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/hieunguyen/Desktop/Social Media/Client/src/Component/Comment.js"],"names":["Card","CardHeader","CardContent","Typography","Avatar","Divider","Button","Collapse","cyan","makeStyles","TextField","useState","TransitionGroup","Api","useStyles","theme","root","display","margin","spacing","small","width","height","large","Comment","postComments","currentUser","postId","comments","setComments","content","setContent","classes","handelContents","e","target","value","handelSubmit","preventDefault","body","post","headers","Authorization","localStorage","getItem","then","res","prevComment","data","comment","catch","error","response","console","log","status","request","backgroundColor","Height","color","username","charAt","toUpperCase","map","author","_id"],"mappings":"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","sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Avatar,\n  Divider,\n  Button,\n  Collapse,\n} from \"@material-ui/core\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Api from \"./Api\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\nexport default function Comment({ postComments, currentUser, postId }) {\n  const [comments, setComments] = useState(postComments);\n  const [content, setContent] = useState(\"\");\n  const classes = useStyles();\n  function handelContents(e) {\n    setContent(e.target.value);\n  }\n  function handelSubmit(e) {\n    e.preventDefault();\n    if (content) {\n      const body = { content };\n      Api.post(`/posts/${postId}/comments`, body, {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\"),\n        },\n      })\n        .then((res) => {\n          if (!comments) {\n            setComments(comments);\n          } else {\n            setComments((prevComment) => [res.data.comment,...prevComment]);\n          }\n        })\n        .catch((error) => {\n          if (error.response) {\n            console.log(error.response.data);\n            console.log(error.response.status);\n          } else if (error.request) {\n            console.log(console.log(error));\n          }\n        });\n    }\n  }\n  return (\n    <>\n      <Card style={{ backgroundColor: cyan[200], Height: \"10px\" }}>\n        <CardHeader\n          avatar={\n            <Avatar\n              variant=\"circular\"\n              style={{ backgroundColor: `${currentUser?.color}` }}\n              className={classes.large}\n            >\n              {currentUser?.username.charAt(0).toUpperCase()}\n            </Avatar>\n          }\n        />\n        <CardContent>\n          <form onSubmit={handelSubmit}>\n            <TextField\n              id=\"filled-textarea\"\n              label=\"\"\n              placeholder=\"Enter your text here\"\n              multiline\n              fullWidth={true}\n              variant=\"filled\"\n              onChange={(e) => handelContents(e)}\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Comment\n            </Button>\n          </form>\n        </CardContent>\n        <Divider />\n      </Card>\n      <TransitionGroup>\n        {comments?.map((comment) => (\n          <Collapse key={comment._id} timeout={500}>\n            <Card style={{ backgroundColor: cyan[200], Height: \"10px\" }}>\n              <CardHeader\n                avatar={\n                  <Avatar\n                    variant=\"circular\"\n                    style={{ backgroundColor: `${comment.author[0]}` }}\n                    className={classes.large}\n                  >\n                    {comment?.author[0].username.charAt(0).toUpperCase()}\n                  </Avatar>\n                }\n              />\n              <CardContent>\n                <Typography variant=\"h6\" component=\"p\" color=\"textSecondary\">\n                  {comment.content}\n                </Typography>\n              </CardContent>\n            </Card>\n            <Divider />\n          </Collapse>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}