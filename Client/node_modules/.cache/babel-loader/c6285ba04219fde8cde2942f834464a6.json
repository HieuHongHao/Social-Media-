{"ast":null,"code":"var _jsxFileName = \"/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Container } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport SinglePost from \"./SinglePost\";\nimport MakePost from \"./MakePost\";\nimport api from \"./Api\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState();\n  const [grow, setGrow] = useState(false);\n  useEffect(() => {\n    async function createPost() {\n      if (post) {\n        try {\n          const body = {\n            content: post.postContent,\n            title: post.postTitle\n          };\n          await api.post(\"/posts\", body, {\n            headers: {\n              Authorization: localStorage.getItem(\"jwt\")\n            }\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    async function fetchPost() {\n      const response = await api.get(\"/posts\", {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\")\n        }\n      });\n      const posts = response.data.posts;\n      return posts;\n    }\n\n    createPost();\n    fetchPost().then(posts => setPosts(posts));\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(MakePost, {\n        setPost: setPost,\n        setGrow: setGrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), posts === null || posts === void 0 ? void 0 : posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(Grow, {\n          in: grow,\n          style: {\n            transformOrigin: \"0 0 0\"\n          },\n          ...(grow ? {\n            timeout: 1000\n          } : {}),\n          children: [/*#__PURE__*/_jsxDEV(SinglePost, {\n            post: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Post, \"rVWLz1RD2kempdBn9dTDnmXXt+k=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/Post.js"],"names":["Container","useState","useEffect","SinglePost","MakePost","api","Grow","Post","posts","setPosts","post","setPost","grow","setGrow","createPost","body","content","postContent","title","postTitle","headers","Authorization","localStorage","getItem","err","console","log","fetchPost","response","get","data","then","map","index","transformOrigin","timeout","_id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,UAAf,GAA4B;AAC1B,UAAIJ,IAAJ,EAAU;AACR,YAAI;AACF,gBAAMK,IAAI,GAAG;AAAEC,YAAAA,OAAO,EAAEN,IAAI,CAACO,WAAhB;AAA6BC,YAAAA,KAAK,EAAER,IAAI,CAACS;AAAzC,WAAb;AACA,gBAAMd,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmBK,IAAnB,EAAyB;AAC7BK,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADR;AADoB,WAAzB,CAAN;AAKD,SAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AACF;;AACD,mBAAeG,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMvB,GAAG,CAACwB,GAAJ,CAAQ,QAAR,EAAkB;AACvCT,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADR;AAD8B,OAAlB,CAAvB;AAKA,YAAMf,KAAK,GAAGoB,QAAQ,CAACE,IAAT,CAActB,KAA5B;AACA,aAAOA,KAAP;AACD;;AACDM,IAAAA,UAAU;AACVa,IAAAA,SAAS,GAAGI,IAAZ,CAAkBvB,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAApC;AACD,GA1BQ,EA0BN,CAACE,IAAD,CA1BM,CAAT;AA2BA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEC,OAAnB;AAA4B,QAAA,OAAO,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,KAFH,aAEGA,KAFH,uBAEGA,KAAK,CAAEwB,GAAP,CAAW,CAACtB,IAAD,EAAOuB,KAAP,KAAiB;AAC3B,4BACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAErB,IADN;AAEE,UAAA,KAAK,EAAE;AAAEsB,YAAAA,eAAe,EAAE;AAAnB,WAFT;AAAA,cAGOtB,IAAI,GAAG;AAAEuB,YAAAA,OAAO,EAAE;AAAX,WAAH,GAAuB,EAHlC;AAAA,kCAKE,QAAC,UAAD;AAA2B,YAAA,IAAI,EAAEzB;AAAjC,aAAiBA,IAAI,CAAC0B,GAAtB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GAjDuB7B,I;;KAAAA,I","sourcesContent":["import { Container } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport SinglePost from \"./SinglePost\";\nimport MakePost from \"./MakePost\";\nimport api from \"./Api\";\nimport Grow from \"@material-ui/core/Grow\";\n\nexport default function Post() {\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState();\n  const [grow, setGrow] = useState(false);\n  useEffect(() => {\n    async function createPost() {\n      if (post) {\n        try {\n          const body = { content: post.postContent, title: post.postTitle };\n          await api.post(\"/posts\", body, {\n            headers: {\n              Authorization: localStorage.getItem(\"jwt\"),\n            },\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n    async function fetchPost() {\n      const response = await api.get(\"/posts\", {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\"),\n        },\n      });\n      const posts = response.data.posts;\n      return posts;\n    }\n    createPost();\n    fetchPost().then((posts) => setPosts(posts));\n  }, [post]);\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <MakePost setPost={setPost} setGrow={setGrow} />\n        {posts?.map((post, index) => {\n          return (\n            <Grow\n              in={grow}\n              style={{ transformOrigin: \"0 0 0\" }}\n              {...(grow ? { timeout: 1000 } : {})}\n            >\n              <SinglePost key={post._id} post={post} />;\n            </Grow>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}