{"ast":null,"code":"var _jsxFileName = \"/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Toolbar, Typography, Divider, Button, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { blue, grey } from \"@material-ui/core/colors\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 300;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#101F33\"\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction RenderIcon(props) {\n  const text = props.text;\n\n  switch (text) {\n    case \"Home\":\n      return /*#__PURE__*/_jsxDEV(HomeIcon, {\n        style: {\n          color: \"rgba(255, 255, 255, 0.7)\"\n        },\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n\n    case \"Posts\":\n      return /*#__PURE__*/_jsxDEV(AllInboxIcon, {\n        style: {\n          color: \"rgba(255, 255, 255, 0.7)\"\n        },\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(PeopleIcon, {\n        style: {\n          color: \"rgba(255, 255, 255, 0.7)\"\n        },\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n  }\n}\n\n_c = RenderIcon;\nexport default function NavBar(props) {\n  _s();\n\n  const classes = useStyles();\n  const text = props.text;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      postion: \"relative\",\n      className: classes.appBar,\n      style: {\n        background: blue[\"A400\"]\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"inherit\",\n          variant: \"h4\",\n          classes: {\n            h4: {\n              fontSize: 12\n            }\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \"style\", /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      anchor: \"left\",\n      className: classes.drawer,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        style: {\n          backgroundColor: \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [\"Home\", \"Posts\", \"Users\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Posts\",\n                children: /*#__PURE__*/_jsxDEV(RenderIcon, {\n                  text: text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text,\n              style: {\n                color: \"rgba(255, 255, 255, 0.7)\"\n              },\n              primaryTypographyProps: {\n                variant: \"h5\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NavBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderIcon\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/NavBar.js"],"names":["AppBar","Toolbar","Typography","Divider","Button","List","ListItem","ListItemIcon","ListItemText","blue","grey","Drawer","makeStyles","HomeIcon","AllInboxIcon","PeopleIcon","Link","drawerWidth","useStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","backgroundColor","toolbar","mixins","content","flexGrow","palette","background","default","padding","spacing","RenderIcon","props","text","color","NavBar","classes","h4","fontSize","paper","map","index","variant"],"mappings":"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","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  Divider,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { blue, grey } from \"@material-ui/core/colors\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport { Link } from \"react-router-dom\";\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#101F33\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\nfunction RenderIcon(props) {\n  const text = props.text;\n  switch (text) {\n    case \"Home\":\n      return (\n        <HomeIcon\n          style={{ color: \"rgba(255, 255, 255, 0.7)\" }}\n          fontSize=\"large\"\n        />\n      );\n    case \"Posts\":\n      return (\n        <AllInboxIcon\n          style={{ color: \"rgba(255, 255, 255, 0.7)\" }}\n          fontSize=\"large\"\n        />\n      );\n\n    default:\n      return (\n        <PeopleIcon\n          style={{ color: \"rgba(255, 255, 255, 0.7)\" }}\n          fontSize=\"large\"\n        />\n      );\n  }\n}\nexport default function NavBar(props) {\n  const classes = useStyles();\n  const text = props.text;\n  return (\n    <>\n      <AppBar\n        postion=\"relative\"\n        className={classes.appBar}\n        style={{ background: blue[\"A400\"] }}\n      >\n        <Toolbar>\n          <Typography\n            color=\"inherit\"\n            variant=\"h4\"\n            classes={{\n              h4: { fontSize: 12 },\n            }}\n          >\n            {text}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      style\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        className={classes.drawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar style={{ backgroundColor: \"black\" }} />\n        <div className={classes.toolbar}>\n          <Divider />\n          <List>\n            {[\"Home\", \"Posts\", \"Users\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  <Link to = \"/Posts\">\n                    <RenderIcon text={text} />\n                  </Link>\n                </ListItemIcon>\n                <ListItemText\n                  primary={text}\n                  style={{ color: \"rgba(255, 255, 255, 0.7)\" }}\n                  primaryTypographyProps={{\n                    variant: \"h5\",\n                  }}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}