{"ast":null,"code":"var _jsxFileName = \"/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Divider, makeStyles } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { blue } from \"@material-ui/core/colors\";\nimport SinglePost from \"./SinglePost\";\nimport MakePost from \"./MakePost\";\nimport api from \"./Api\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  ul: {\n    \"& .MuiPaginationItem-root\": {\n      boxShadow: \"none\",\n      textTransform: \"none\",\n      fontSize: 13,\n      padding: \"6px 12px\",\n      lineHeight: 1.5,\n      backgroundColor: blue[600],\n      borderColor: \"#0063cc\",\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#0069d9\",\n        borderColor: \"#0062cc\",\n        boxShadow: \"none\"\n      },\n      \"&:active\": {\n        boxShadow: \"none\",\n        backgroundColor: \"#0062cc\",\n        borderColor: \"#005cbf\"\n      },\n      \"&:focus\": {\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\"\n      }\n    }\n  }\n}));\nexport default function Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState();\n  const [grow, setGrow] = useState(false);\n  const [totalPage, setTotalPage] = useState();\n  comst[(currentPage, setCurrentPage)];\n  const classes = useStyles();\n\n  function handelPagination(e) {}\n\n  useEffect(() => {\n    async function createPost() {\n      if (post) {\n        try {\n          const body = {\n            content: post.postContent,\n            title: post.postTitle\n          };\n          await api.post(\"/posts\", body, {\n            headers: {\n              Authorization: localStorage.getItem(\"jwt\")\n            }\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    async function fetchPost() {\n      const response = await api.get(`/posts/?page={}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\")\n        }\n      });\n      const {\n        posts,\n        numPosts\n      } = response.data;\n      return {\n        posts,\n        numPosts\n      };\n    }\n\n    createPost();\n    fetchPost().then(data => {\n      setPosts(data.posts);\n      setTotalPage(data.numPosts);\n    });\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(MakePost, {\n        setPost: setPost,\n        setGrow: setGrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), posts === null || posts === void 0 ? void 0 : posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(Grow, {\n          in: grow,\n          style: {\n            transformOrigin: \"0 0 0\"\n          },\n          ...(grow ? {\n            timeout: 10\n          } : {}),\n          children: /*#__PURE__*/_jsxDEV(SinglePost, {\n            post: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPage % 10 === 0 ? totalPage / 10 : totalPage / 10 + 1,\n        classes: {\n          ul: classes.ul\n        },\n        size: \"large\",\n        style: {\n          marginTop: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Post, \"s9Xiwmo8V77DK1+RBUalVzMdzTM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/hieunguyen/Desktop/WInter_Project/Social Media/RealClient/src/Component/Post.js"],"names":["Container","Divider","makeStyles","useState","useEffect","blue","SinglePost","MakePost","api","Grow","Pagination","useStyles","theme","ul","boxShadow","textTransform","fontSize","padding","lineHeight","backgroundColor","borderColor","color","Post","posts","setPosts","post","setPost","grow","setGrow","totalPage","setTotalPage","comst","currentPage","setCurrentPage","classes","handelPagination","e","createPost","body","content","postContent","title","postTitle","headers","Authorization","localStorage","getItem","err","console","log","fetchPost","response","get","numPosts","data","then","map","index","transformOrigin","timeout","_id","marginTop"],"mappings":"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","sourcesContent":["import { Container, Divider, makeStyles } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { blue } from \"@material-ui/core/colors\";\nimport SinglePost from \"./SinglePost\";\nimport MakePost from \"./MakePost\";\nimport api from \"./Api\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles((theme) => ({\n  ul: {\n    \"& .MuiPaginationItem-root\": {\n      boxShadow: \"none\",\n      textTransform: \"none\",\n      fontSize: 13,\n      padding: \"6px 12px\",\n\n      lineHeight: 1.5,\n      backgroundColor: blue[600],\n      borderColor: \"#0063cc\",\n      color: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#0069d9\",\n        borderColor: \"#0062cc\",\n        boxShadow: \"none\",\n      },\n      \"&:active\": {\n        boxShadow: \"none\",\n        backgroundColor: \"#0062cc\",\n        borderColor: \"#005cbf\",\n      },\n      \"&:focus\": {\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\",\n      },\n    },\n  },\n}));\n\nexport default function Post() {\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState();\n  const [grow, setGrow] = useState(false);\n  const [totalPage, setTotalPage] = useState();\n  comst [currentPage,setCurrentPage]\n  const classes = useStyles();\n  function handelPagination(e) {}\n  useEffect(() => {\n    async function createPost() {\n      if (post) {\n        try {\n          const body = { content: post.postContent, title: post.postTitle };\n          await api.post(\"/posts\", body, {\n            headers: {\n              Authorization: localStorage.getItem(\"jwt\"),\n            },\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n    async function fetchPost() {\n      const response = await api.get(`/posts/?page={}`, {\n        headers: {\n          Authorization: localStorage.getItem(\"jwt\"),\n        },\n      });\n      const { posts, numPosts } = response.data;\n      return { posts, numPosts };\n    }\n    createPost();\n    fetchPost().then((data) => {\n      setPosts(data.posts);\n      setTotalPage(data.numPosts);\n    });\n  }, [post]);\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <MakePost setPost={setPost} setGrow={setGrow} />\n        {posts?.map((post, index) => {\n          return (\n            <Grow\n              in={grow}\n              style={{ transformOrigin: \"0 0 0\" }}\n              {...(grow ? { timeout: 10 } : {})}\n            >\n              <SinglePost key={post._id} post={post} />\n            </Grow>\n          );\n        })}\n\n        <Pagination\n          count={totalPage % 10 === 0 ? totalPage / 10 : totalPage / 10 + 1}\n          classes={{ ul: classes.ul }}\n          size=\"large\"\n          style={{ marginTop: \"30px\" }}\n        />\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}